/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import BO.CategoriaBO;
import DAO.CategoriaDAO;
import com.sun.rowset.CachedRowSetImpl;
import java.awt.Component;
import java.awt.event.ItemEvent;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Stree
 */
public class frmCategorias extends javax.swing.JFrame {

    private TableRowSorter trsFiltro;
    DefaultTableModel modeloCategorias;
    
    /**
     * Creates new form frmCategorias
     */
    public frmCategorias() {
        this.bindGrid();
        initComponents();
        this.cbxFiltroCat.insertItemAt("Seleccionar", 0);
        this.cbxFiltroCat.setSelectedIndex(0);
        this.txtNombreCategoria.requestFocus();
        this.setLocationRelativeTo(null);
        this.setTitle("Gestión de Categorías");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        dgCategorias = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false; //Disallow the editing of any cell
            }
        };
        gbxDatos = new javax.swing.JPanel();
        lblIDCategoria = new javax.swing.JLabel();
        txtIDCategoria = new javax.swing.JTextField();
        lblNombre = new javax.swing.JLabel();
        txtNombreCategoria = new javax.swing.JTextField();
        gbxAcciones = new javax.swing.JPanel();
        btnNuevo = new javax.swing.JButton();
        btnAgregar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        lblFiltroCat = new javax.swing.JLabel();
        cbxFiltroCat = new JComboBox(getColumnas());
        txtFiltroCat = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 102, 153));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 51)));
        jPanel1.setPreferredSize(new java.awt.Dimension(358, 67));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Trebuchet MS", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Categorías de Productos");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        dgCategorias.setModel(modeloCategorias);
        dgCategorias.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dgCategoriasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(dgCategorias);

        gbxDatos.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP));

        lblIDCategoria.setText("ID");

        txtIDCategoria.setEnabled(false);
        txtIDCategoria.setName("txtIDCategoria"); // NOI18N

        lblNombre.setText("Nombre");

        javax.swing.GroupLayout gbxDatosLayout = new javax.swing.GroupLayout(gbxDatos);
        gbxDatos.setLayout(gbxDatosLayout);
        gbxDatosLayout.setHorizontalGroup(
            gbxDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gbxDatosLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(gbxDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNombre)
                    .addComponent(lblIDCategoria))
                .addGap(18, 18, 18)
                .addGroup(gbxDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtIDCategoria)
                    .addComponent(txtNombreCategoria, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE))
                .addGap(23, 23, 23))
        );
        gbxDatosLayout.setVerticalGroup(
            gbxDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gbxDatosLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(gbxDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblIDCategoria)
                    .addComponent(txtIDCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(gbxDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombre)
                    .addComponent(txtNombreCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        gbxAcciones.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Acciones", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP));

        btnNuevo.setText("Nuevo");
        btnNuevo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnNuevoMouseClicked(evt);
            }
        });

        btnAgregar.setText("Agregar");
        btnAgregar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAgregarMouseClicked(evt);
            }
        });

        btnModificar.setText("Modificar");
        btnModificar.setEnabled(false);
        btnModificar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnModificarMouseClicked(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.setEnabled(false);
        btnEliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEliminarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout gbxAccionesLayout = new javax.swing.GroupLayout(gbxAcciones);
        gbxAcciones.setLayout(gbxAccionesLayout);
        gbxAccionesLayout.setHorizontalGroup(
            gbxAccionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gbxAccionesLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(gbxAccionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnModificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnNuevo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(32, 32, 32)
                .addGroup(gbxAccionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAgregar)
                    .addComponent(btnEliminar))
                .addGap(18, 18, 18))
        );
        gbxAccionesLayout.setVerticalGroup(
            gbxAccionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gbxAccionesLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(gbxAccionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNuevo)
                    .addComponent(btnAgregar))
                .addGap(18, 18, 18)
                .addGroup(gbxAccionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnModificar)
                    .addComponent(btnEliminar))
                .addGap(16, 16, 16))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Filtrar", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP));

        lblFiltroCat.setText("Buscar por:");

        cbxFiltroCat.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxFiltroCatItemStateChanged(evt);
            }
        });

        txtFiltroCat.setEnabled(false);
        txtFiltroCat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFiltroCatKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(lblFiltroCat)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbxFiltroCat, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtFiltroCat, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFiltroCat)
                    .addComponent(cbxFiltroCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFiltroCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 579, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(gbxDatos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(gbxAcciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(gbxDatos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(gbxAcciones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNuevoMouseClicked
        this.Nuevo();
        this.txtNombreCategoria.requestFocus();
        this.bindGrid();
    }//GEN-LAST:event_btnNuevoMouseClicked

    private void btnAgregarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAgregarMouseClicked
        try {
            if (this.ValidarVacios()){
                this.Guardar();
            } else {
                JOptionPane.showMessageDialog(null, "Rellena los campos faltantes.");
            }
            this.txtNombreCategoria.requestFocus();
        } catch (SQLException ex) {
            Logger.getLogger(frmAlmacenes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAgregarMouseClicked

    private void btnModificarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnModificarMouseClicked
        try {
            if (this.txtIDCategoria.getText().trim().length() != 0){
                this.Modificar();
            } else {
                JOptionPane.showMessageDialog(null, "Selecciona un registro.");
            }
            this.txtNombreCategoria.requestFocus();
        } catch (SQLException ex) {
            Logger.getLogger(frmAlmacenes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnModificarMouseClicked

    private void btnEliminarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarMouseClicked
        try {
            if (this.txtIDCategoria.getText().trim().length() != 0){
                this.Eliminar();
            } else {
                JOptionPane.showMessageDialog(null, "Selecciona un registro.");
            }
            this.txtNombreCategoria.requestFocus();
        } catch (SQLException ex) {
            Logger.getLogger(frmAlmacenes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnEliminarMouseClicked

    private void dgCategoriasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dgCategoriasMouseClicked
        int row = this.dgCategorias.getSelectedRow();
        
        String[] datos = new String[2];
        datos[0] = this.dgCategorias.getValueAt(row, 0).toString();
        datos[1] = this.dgCategorias.getValueAt(row, 1).toString();
        
        this.LlenarDatos(datos);
        
        this.txtNombreCategoria.requestFocus();
        this.btnAgregar.setEnabled(false);
        this.btnModificar.setEnabled(true);
        this.btnEliminar.setEnabled(true);
    }//GEN-LAST:event_dgCategoriasMouseClicked

    private void cbxFiltroCatItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxFiltroCatItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            this.txtFiltroCat.setText("");

            if (evt.getItem() != "Seleccionar") {
                this.txtFiltroCat.setEnabled(true);
                this.txtFiltroCat.requestFocus();
            } else {
                this.cbxFiltroCat.setSelectedIndex(0);
                this.txtFiltroCat.setEnabled(false);
                this.dgCategorias.setRowSorter(null);
            }
        }
    }//GEN-LAST:event_cbxFiltroCatItemStateChanged

    private void txtFiltroCatKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFiltroCatKeyTyped
        txtFiltroCat.addKeyListener(new KeyAdapter() {
            public void keyReleased(final KeyEvent e) {
                String cadena = (txtFiltroCat.getText());
                txtFiltroCat.setText(cadena);
                repaint();
                Filtrar();
            }
        });

        trsFiltro = new TableRowSorter(this.dgCategorias.getModel());
        this.dgCategorias.setRowSorter(trsFiltro);
    }//GEN-LAST:event_txtFiltroCatKeyTyped

    private void Nuevo(){
        this.txtIDCategoria.setText("");
        this.txtNombreCategoria.setText("");
        
        this.bindGrid();
        this.dgCategorias.setModel(modeloCategorias);
        this.cbxFiltroCat.setSelectedIndex(0);
        this.txtFiltroCat.setEnabled(false);
        this.dgCategorias.setRowSorter(null);
        
        this.btnAgregar.setEnabled(true);
        this.btnModificar.setEnabled(false);
        this.btnEliminar.setEnabled(false);
    }
    
    private void Guardar() throws SQLException {
        CategoriaBO OBCategoria = new CategoriaBO();
        OBCategoria.setNombre(this.txtNombreCategoria.getText());
        
        CategoriaDAO data = new CategoriaDAO();
        int correcto = data.guardar(OBCategoria);
    
        if (correcto > 0){
            JOptionPane.showMessageDialog(null, "Operación realizada con éxito.");
            
            this.Nuevo();
            
            this.bindGrid();
            this.dgCategorias.setModel(modeloCategorias);
            this.dgCategorias.setRowSorter(null);
        }
        else{
            JOptionPane.showMessageDialog(null, "Ocurrió un error inesperado.");
        } 
    }
    
    private void Modificar() throws SQLException {
        CategoriaBO OBCategoria = new CategoriaBO();
        OBCategoria.setIDCategoria(Integer.parseInt(this.txtIDCategoria.getText()));
        OBCategoria.setNombre(this.txtNombreCategoria.getText());
        
        CategoriaDAO data = new CategoriaDAO();
        int correcto = data.editar(OBCategoria);
    
        if (correcto > 0){
            JOptionPane.showMessageDialog(null, "Operación realizada con éxito.");
            
            this.Nuevo();
            
            this.bindGrid();
            this.dgCategorias.setModel(modeloCategorias);
            this.dgCategorias.setRowSorter(null);
        }
        else{
            JOptionPane.showMessageDialog(null, "Ocurrió un error inesperado.");
        } 
    }
    
    private void Eliminar() throws SQLException {
        int correcto = 0;
        CategoriaBO OBCategoria = new CategoriaBO();
        CategoriaDAO data = new CategoriaDAO();
        OBCategoria.setIDCategoria(Integer.parseInt(this.txtIDCategoria.getText()));
        
        correcto = data.eliminar(OBCategoria);
        
        if (correcto > 0){
            JOptionPane.showMessageDialog(null, "Operación relizada con éxito");
            this.Nuevo();
            this.bindGrid();
            this.dgCategorias.setModel(modeloCategorias);
            this.dgCategorias.setRowSorter(null);
        }
        else{
            JOptionPane.showMessageDialog(null, "Ocurrió un error inesperado.");
        }
        
    }
    
    private void LlenarDatos(String[] datos){
        this.txtIDCategoria.setText(datos[0]);
        this.txtNombreCategoria.setText(datos[1]);
    }
    
    private boolean ValidarVacios(){
        Component[] componentes = this.gbxDatos.getComponents();
        JTextField txt = new JTextField();
        
        for (int i = 0; i < componentes.length; i++) {
            if (componentes[i] instanceof JTextField){
                txt = (JTextField)componentes[i];
                
                if (txt.getName() != "txtIDCategoria"){
                    if (txt.getText().trim().length() == 0) {
                        return false;
                    }
                }
            }
        }
        
        return true;
    }
    
    private void bindGrid(){
        try {
            modeloCategorias = new DefaultTableModel(null, this.getColumnas());
            CategoriaDAO data = new CategoriaDAO();
            CachedRowSetImpl crs = data.mostrar();
            Object datos[] = new Object[3];
            
            while (crs.next()){
                for (int i = 0; i < 2; i++){
                    datos[i] = crs.getObject(i+1);
                }   
                modeloCategorias.addRow(datos);
            }
        }
        catch (SQLException ex) {
            Logger.getLogger(frmAlmacenes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private String[] getColumnas(){
        String columns[] = new String[]{
            "ID Categoria",
            "Nombre"
        };
        
        return columns;
    }
    
    private void Filtrar() {
        
        int columnaABuscar = this.cbxFiltroCat.getSelectedIndex();
        
        trsFiltro.setRowFilter(RowFilter.regexFilter("(?i)" + txtFiltroCat.getText(), columnaABuscar - 1));
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmCategorias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmCategorias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmCategorias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmCategorias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmCategorias().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JComboBox<String> cbxFiltro;
    private javax.swing.JComboBox<String> cbxFiltroCat;
    private javax.swing.JTable dgCategorias;
    private javax.swing.JPanel gbxAcciones;
    private javax.swing.JPanel gbxDatos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblFiltro;
    private javax.swing.JLabel lblFiltroCat;
    private javax.swing.JLabel lblIDCategoria;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JTextField txtFiltro;
    private javax.swing.JTextField txtFiltroCat;
    private javax.swing.JTextField txtIDCategoria;
    private javax.swing.JTextField txtNombreCategoria;
    // End of variables declaration//GEN-END:variables
}
